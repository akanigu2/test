-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Constants
local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera
local defaultWalkSpeed = 16
local maxSpeedMultiplier = 5

-- State
local espEnabled = true
local noclipEnabled = false
local guiVisible = true
local drawingObjects = {}

-- GUI
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "AkaniguESP"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 220, 0, 140)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.BackgroundTransparency = 0.4
frame.BorderSizePixel = 0

-- Fade-in
frame.BackgroundTransparency = 1
for i = 1, 10 do
    frame.BackgroundTransparency = 1 - i * 0.06
    task.wait(0.01)
end

-- ESP toggle
local espToggle = Instance.new("TextButton", frame)
espToggle.Size = UDim2.new(0, 100, 0, 30)
espToggle.Position = UDim2.new(0, 10, 0, 10)
espToggle.Text = "ESP: ON"
espToggle.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
espToggle.TextColor3 = Color3.new(1, 1, 1)
espToggle.BorderSizePixel = 0
espToggle.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espToggle.Text = espEnabled and "ESP: ON" or "ESP: OFF"
end)

-- WalkSpeed slider
local speedLabel = Instance.new("TextLabel", frame)
speedLabel.Size = UDim2.new(1, -20, 0, 20)
speedLabel.Position = UDim2.new(0, 10, 0, 50)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.new(1, 1, 1)
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Text = "WalkSpeed: 1.0x"

local sliderBar = Instance.new("Frame", frame)
sliderBar.Size = UDim2.new(1, -20, 0, 8)
sliderBar.Position = UDim2.new(0, 10, 0, 80)
sliderBar.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
sliderBar.BorderSizePixel = 0

local sliderKnob = Instance.new("Frame", sliderBar)
sliderKnob.Size = UDim2.new(0, 10, 1, 0)
sliderKnob.Position = UDim2.new(0, 0, 0, 0)
sliderKnob.BackgroundColor3 = Color3.new(1, 1, 1)
sliderKnob.BorderSizePixel = 0

local dragging = false
local function updateWalkSpeed()
    local pct = math.clamp(sliderKnob.Position.X.Scale, 0, 1)
    local mult = 1 + (maxSpeedMultiplier - 1) * pct
    speedLabel.Text = ("WalkSpeed: %.1fx"):format(mult)
    local char = localPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.WalkSpeed = defaultWalkSpeed * mult
    end
end

sliderKnob.InputBegan:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
    end
end)
UserInputService.InputEnded:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)
UserInputService.InputChanged:Connect(function(i)
    if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then
        local abs = i.Position.X
        local barX = sliderBar.AbsolutePosition.X
        local barW = sliderBar.AbsoluteSize.X
        local pct = math.clamp((abs - barX) / barW, 0, 1)
        sliderKnob.Position = UDim2.new(pct, -5, 0, 0)
        updateWalkSpeed()
    end
end)

-- Credits
local creditLabel = Instance.new("TextLabel", frame)
creditLabel.Size = UDim2.new(1, -20, 0, 20)
creditLabel.Position = UDim2.new(0, 10, 1, -25)
creditLabel.BackgroundTransparency = 1
creditLabel.TextColor3 = Color3.new(1, 1, 1)
creditLabel.TextXAlignment = Enum.TextXAlignment.Left
creditLabel.Text = "Made by Akanigu"

-- Hide/show GUI with Right CTRL
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.RightControl then
        guiVisible = not guiVisible
        gui.Enabled = guiVisible
    end
end)

-- Noclip toggle with L
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.L then
        noclipEnabled = not noclipEnabled
    end
end)

-- ESP creation
local function createEsp(player)
    if player == localPlayer then return end
    if drawingObjects[player] then return end
    local t = {}

    local nameTxt = Drawing.new("Text")
    nameTxt.Size = 14
    nameTxt.Color = player.TeamColor.Color
    nameTxt.Outline = true
    nameTxt.Center = true
    nameTxt.Visible = false

    local healthTxt = Drawing.new("Text")
    healthTxt.Size = 13
    healthTxt.Color = Color3.new(1, 0, 0)
    healthTxt.Outline = true
    healthTxt.Center = true
    healthTxt.Visible = false

    local distTxt = Drawing.new("Text")
    distTxt.Size = 13
    distTxt.Color = Color3.new(1, 1, 1)
    distTxt.Outline = true
    distTxt.Center = true
    distTxt.Visible = false

    t.name, t.health, t.dist = nameTxt, healthTxt, distTxt
    drawingObjects[player] = t
end

Players.PlayerRemoving:Connect(function(plr)
    local objs = drawingObjects[plr]
    if objs then
        objs.name:Remove()
        objs.health:Remove()
        objs.dist:Remove()
        drawingObjects[plr] = nil
    end
end)

-- Main loop
RunService.RenderStepped:Connect(function()
    -- Noclip
    if noclipEnabled then
        local char = localPlayer.Character
        if char then
            for _, part in pairs(char:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end

    -- ESP & info
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer then
            local char = player.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            local hum = char and char:FindFirstChildOfClass("Humanoid")
            if hrp and hum then
                createEsp(player)
                local objs = drawingObjects[player]
                local pos, onScreen = camera:WorldToViewportPoint(hrp.Position + Vector3.new(0, 3, 0))
                if espEnabled and onScreen and hum.Health > 0 then
                    objs.name.Position = Vector2.new(pos.X, pos.Y)
                    objs.name.Text = player.Name.." ["..tostring(player.Team).."]"
                    objs.name.Color = player.TeamColor.Color
                    objs.name.Visible = true

                    objs.health.Position = Vector2.new(pos.X, pos.Y + 15)
                    objs.health.Text = "HP: "..math.floor(hum.Health).."/"..math.floor(hum.MaxHealth)
                    objs.health.Visible = true

                    local dist = (localPlayer.Character.HumanoidRootPart.Position - hrp.Position).Magnitude
                    objs.dist.Position = Vector2.new(pos.X, pos.Y + 30)
                    objs.dist.Text = "Dist: "..math.floor(dist)
                    objs.dist.Visible = true
                else
                    objs.name.Visible = false
                    objs.health.Visible = false
                    objs.dist.Visible = false
                end
            end
        end
    end
end)
