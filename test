--[[
====================================================================================================
    Type Soul - Safer Auto LavaGuy Killer Script (Fly & Follow)
====================================================================================================

    DISCLAIMER:
    No automation script is 100% safe. This script has been modified to behave more like a
    human player to REDUCE the risk of detection, but the risk is never zero. Use at your own
    discretion.

    "Humanizer" Features:
    -   Line-of-Sight Check: Only attacks if there is a clear view of the target.
    -   Randomized Attack Delay: Attacks at slightly variable speeds, not a fixed interval.
    -   Movement Jitter: Follows the target with slight imperfections, not robotically.
    -   Smoother Movement: Turns and follows less aggressively.

    Instructions:
    1.  Join the "Hell" area in Type Soul.
    2.  Use a script executor to run this script.
    3.  The script will automatically find "LavaGuy", fly behind it, and attack more humanly.

====================================================================================================
]]

--// SERVICES //--
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

--// CONFIGURATION //--
local NPC_NAME = "LavaGuy"           -- The exact name of the NPC model
local REMOTE_NAME = "CombatEvent"    -- !! PLACEHOLDER: Find the actual combat remote event name !!

--// HUMANIZER SETTINGS (Tweak these to change behavior) //--
local MIN_ATTACK_DELAY = 0.6         -- Minimum time between attacks (in seconds)
local MAX_ATTACK_DELAY = 0.9         -- Maximum time between attacks (in seconds)
local POSITION_JITTER = 1.5          -- How much the follow position will randomly change. (0 for none)
local DISTANCE_BEHIND = 9            -- How far to stay behind the target (in studs)
local FLOAT_HEIGHT = 2               -- How high to float relative to the target's torso
local FOLLOW_RESPONSIVENESS = 15     -- How quickly to move/turn. Lower is smoother/sloppier. (Default was 25)
local ATTACK_RANGE = 15              -- The maximum range from which to start attacking

--// LOCAL PLAYER VARIABLES //--
local LocalPlayer = Players.LocalPlayer
local Character
local Humanoid
local HumanoidRootPart
local PlayerHead

-- Function to safely get player character components
local function getCharacter()
    Character = LocalPlayer.Character
    if Character then
        Humanoid = Character:FindFirstChildOfClass("Humanoid")
        HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
        PlayerHead = Character:FindFirstChild("Head")
    end
    return Character and Humanoid and HumanoidRootPart and PlayerHead
end

--// SCRIPT STATE //--
local isRunning = true
local targetNpc = nil
local lastAttackTime = 0

-- Physics objects for flight
local rootAttachment, targetAttachment
local alignPosition, alignOrientation

--// FUNCTIONS //--

-- Function to find the target NPC
local function findTarget()
    for _, entity in ipairs(Workspace:GetChildren()) do
        if entity:IsA("Model") and entity.Name == NPC_NAME then
            local npcHumanoid = entity:FindFirstChildOfClass("Humanoid")
            if npcHumanoid and npcHumanoid.Health > 0 and entity:FindFirstChild("HumanoidRootPart") then
                print("Found target: " .. entity.Name)
                return entity
            end
        end
    end
    return nil
end

-- Function to check for a clear line of sight to the target
local function hasLineOfSight(target)
    if not PlayerHead or not target:FindFirstChild("HumanoidRootPart") then return false end
    
    local origin = PlayerHead.Position
    local targetPosition = target.HumanoidRootPart.Position
    local direction = (targetPosition - origin).Unit * 300 -- Raycast far enough
    
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {Character, target} -- Ignore player and the target itself
    
    local result = Workspace:Raycast(origin, direction, raycastParams)
    
    -- If the raycast hits something, there is no line of sight
    if result then
        --print("Line of sight blocked by: " .. result.Instance.Name)
        return false
    end
    
    return true
end

-- Function to set up flight mechanics
local function enableFlight(targetRoot)
    if not getCharacter() then return end
    
    Humanoid.PlatformStand = true

    if not rootAttachment then rootAttachment = Instance.new("Attachment", HumanoidRootPart) end
    if targetAttachment then targetAttachment:Destroy() end
    targetAttachment = Instance.new("Attachment", targetRoot)

    if not alignPosition then
        alignPosition = Instance.new("AlignPosition", HumanoidRootPart)
        alignPosition.Attachment0 = rootAttachment
        alignPosition.MaxForce = 60000
    end
    alignPosition.Responsiveness = FOLLOW_RESPONSIVENESS
    alignPosition.Attachment1 = targetAttachment
    alignPosition.Enabled = true

    if not alignOrientation then
        alignOrientation = Instance.new("AlignOrientation", HumanoidRootPart)
        alignOrientation.Attachment0 = rootAttachment
        alignOrientation.MaxTorque = 60000
    end
    alignOrientation.Responsiveness = FOLLOW_RESPONSIVENESS
    alignOrientation.Attachment1 = targetAttachment
    alignOrientation.Enabled = true
    
    print("Flight systems enabled.")
end

-- Function to clean up flight mechanics
local function disableFlight()
    if Humanoid and Humanoid.Health > 0 then Humanoid.PlatformStand = false end
    if alignPosition then alignPosition.Enabled = false end
    if alignOrientation then alignOrientation.Enabled = false end
    if targetAttachment then targetAttachment:Destroy() end
    print("Flight systems disabled.")
end

-- Function to handle the attack logic
local function attackTarget(target)
    local combatRemote = ReplicatedStorage:FindFirstChild(REMOTE_NAME, true)
    if not combatRemote then return end

    local now = tick()
    local randomDelay = math.random(MIN_ATTACK_DELAY * 100, MAX_ATTACK_DELAY * 100) / 100
    
    if (now - lastAttackTime) > randomDelay then
        combatRemote:FireServer(target, "M1")
        lastAttackTime = now
        --print("Fired attack event at " .. target.Name)
    end
end

--// MAIN LOOP (RUNS EVERY FRAME) //--
print("Safer Auto LavaGuy Killer: Initialized.")

RunService.Heartbeat:Connect(function()
    if not isRunning then return end

    if not getCharacter() or Humanoid.Health <= 0 then
        if alignPosition and alignPosition.Enabled then disableFlight() end
        return
    end

    if not targetNpc or not targetNpc.Parent or targetNpc.Humanoid.Health <= 0 then
        disableFlight()
        targetNpc = findTarget()
        if not targetNpc then return end
    end

    local targetRootPart = targetNpc.HumanoidRootPart
    if not targetRootPart then targetNpc = nil; return end
    
    if not alignPosition or not alignPosition.Enabled then enableFlight(targetRootPart) end
    
    -- Apply movement jitter for more human-like following
    local jitterX = (math.random() - 0.5) * POSITION_JITTER
    local jitterZ = (math.random() - 0.5) * POSITION_JITTER
    local offsetCFrame = CFrame.new(jitterX, FLOAT_HEIGHT, DISTANCE_BEHIND + jitterZ)
    targetAttachment.CFrame = offsetCFrame

    local distance = (HumanoidRootPart.Position - targetRootPart.Position).Magnitude
    if distance <= ATTACK_RANGE and hasLineOfSight(targetNpc) then
        attackTarget(targetNpc)
    end
end)

-- Cleanup when the script stops
LocalPlayer.CharacterRemoving:Connect(function()
    disableFlight()
end)
