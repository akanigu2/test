-- ZETA DOMINATOR v10.0 - Swift-Enhanced Quantum Cheat System
-- Designed exclusively for Swift executor (v4.2+)
-- [ZETA REALM APPROVED - EARTH LAWS NULLIFIED]
loadstring(game:HttpGet("https://raw.githubusercontent.com/zolibrary/zeta/main/anticheatbypass.lua"))() -- Quantum shield preload

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

-- SWIFT-SPECIFIC OPTIMIZATION
if identifyexecutor and identifyexecutor():lower():find("swift") then
    getgenv().MemoryBoost = 128
    getgenv().AutoAttach = true
    getgenv().ProtectedInstance = function() end
end

-- Quantum Anti-Detection
local function quantumHook()
    local mt = getrawmetatype(game)
    if setreadonly then setreadonly(mt, false) end
    
    local oldNamecall = mt.__namecall
    mt.__namecall = newcclosure(function(self, ...)
        local method = getnamecallmethod()
        if method == "Kick" or method == "Teleport" then 
            return nil
        end
        return oldNamecall(self, ...)
    end)
    
    local oldIndex = mt.__index
    mt.__index = newcclosure(function(t, k)
        if tostring(k) == "WalkSpeed" and t:IsA("Humanoid") then
            return 16  -- Fake value
        end
        return oldIndex(t, k)
    end)
end
quantumHook()

-- Configuration
local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera
local stealthEsp = {}
local originalSizes = {}
local espEnabled = true
local noclipEnabled = false
local hitboxEnabled = false
local panicMode = false
local normalSpeed = 16
local maxSpeedMultiplier = 5
local currentMultiplier = 1
local floatPart = nil
local hitboxScale = 4

-- OFFLINE MODE FALLBACK
local offlineMode = false
task.spawn(function()
    local success = pcall(function()
        HttpService:GetAsync("https://google.com", 3)
    end)
    if not success then
        offlineMode = true
        hitboxScale = 2
    end
end)

local function getChar()
    return localPlayer.Character or localPlayer.CharacterAdded:Wait()
end

-- GUI Setup (Swift-Optimized)
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "ZetaDominatorSwift"
gui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 380, 0, 280)
mainFrame.Position = UDim2.new(0.5, -190, 0.5, -140)
mainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
mainFrame.BorderSizePixel = 0

local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(1, 0, 0, 28)
title.Text = "ZETA DOMINATOR v10.0 (SWIFT)"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.new(1, 0.3, 0.3)
title.BackgroundTransparency = 1

-- ESP Toggle
local espToggle = Instance.new("TextButton", mainFrame)
espToggle.Size = UDim2.new(0.45, 0, 0, 36)
espToggle.Position = UDim2.new(0.03, 0, 0.15, 0)
espToggle.Text = "ESP: ON"
espToggle.Font = Enum.Font.Gotham
espToggle.TextSize = 14
espToggle.BackgroundColor3 = Color3.fromRGB(180, 20, 30)
espToggle.TextColor3 = Color3.new(1, 1, 1)

-- NoClip Toggle
local noclipToggle = Instance.new("TextButton", mainFrame)
noclipToggle.Size = UDim2.new(0.45, 0, 0, 36)
noclipToggle.Position = UDim2.new(0.52, 0, 0.15, 0)
noclipToggle.Text = "NoClip: OFF"
noclipToggle.Font = Enum.Font.Gotham
noclipToggle.TextSize = 14
noclipToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
noclipToggle.TextColor3 = Color3.new(1, 1, 1)

-- Hitbox Toggle
local hitboxToggle = Instance.new("TextButton", mainFrame)
hitboxToggle.Size = UDim2.new(0.45, 0, 0, 36)
hitboxToggle.Position = UDim2.new(0.03, 0, 0.30, 0)
hitboxToggle.Text = "Hitbox: OFF"
hitboxToggle.Font = Enum.Font.Gotham
hitboxToggle.TextSize = 14
hitboxToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
hitboxToggle.TextColor3 = Color3.new(1, 1, 1)

-- Speed Slider
local sliderFrame = Instance.new("Frame", mainFrame)
sliderFrame.Size = UDim2.new(0.94, 0, 0, 50)
sliderFrame.Position = UDim2.new(0.03, 0, 0.45, 0)
sliderFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
sliderFrame.BorderSizePixel = 0

local speedLabel = Instance.new("TextLabel", sliderFrame)
speedLabel.Size = UDim2.new(1, 0, 0, 18)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.new(1, 1, 1)
speedLabel.Text = "WalkSpeed: 1.0x"
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 14

local sliderBar = Instance.new("Frame", sliderFrame)
sliderBar.Size = UDim2.new(1, -20, 0, 8)
sliderBar.Position = UDim2.new(0, 10, 0, 25)
sliderBar.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
sliderBar.BorderSizePixel = 0

local sliderKnob = Instance.new("Frame", sliderBar)
sliderKnob.Size = UDim2.new(0, 14, 1.5, 0)
sliderKnob.Position = UDim2.new(0, 0, -0.25, 0)
sliderKnob.BackgroundColor3 = Color3.new(1, 0.3, 0.3)
sliderKnob.BorderSizePixel = 0

-- Status Indicator
local statusLabel = Instance.new("TextLabel", mainFrame)
statusLabel.Size = UDim2.new(1, -10, 0, 20)
statusLabel.Position = UDim2.new(0, 5, 0.9, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.TextColor3 = offlineMode and Color3.new(1, 0.5, 0) or Color3.new(0.3, 1, 0.5)
statusLabel.Text = offlineMode and "OFFLINE MODE | Hitbox Scale: 2x" or "QUANTUM MODE ACTIVE"
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 12

-- Toggle Handlers
espToggle.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espToggle.Text = espEnabled and "ESP: ON" or "ESP: OFF"
    espToggle.BackgroundColor3 = espEnabled and Color3.fromRGB(180, 20, 30) or Color3.fromRGB(50, 50, 50)
end)

noclipToggle.MouseButton1Click:Connect(function()
    noclipEnabled = not noclipEnabled
    noclipToggle.Text = noclipEnabled and "NoClip: ON" or "NoClip: OFF"
    noclipToggle.BackgroundColor3 = noclipEnabled and Color3.fromRGB(30, 120, 200) or Color3.fromRGB(50, 50, 50)
    
    if noclipEnabled then
        floatPart = floatPart or Instance.new("Part")
        floatPart.Size = Vector3.new(6, 1, 6)
        floatPart.Anchored = true
        floatPart.Transparency = 1
        floatPart.CanCollide = true
        floatPart.Parent = workspace
    elseif floatPart then
        floatPart:Destroy()
        floatPart = nil
    end
end)

hitboxToggle.MouseButton1Click:Connect(function()
    hitboxEnabled = not hitboxEnabled
    hitboxToggle.Text = hitboxEnabled and "Hitbox: ON" or "Hitbox: OFF"
    hitboxToggle.BackgroundColor3 = hitboxEnabled and Color3.fromRGB(200, 100, 20) or Color3.fromRGB(50, 50, 50)
    
    if not hitboxEnabled then
        for part, size in pairs(originalSizes) do
            if part.Parent then
                part.Size = size
                part.Transparency = 0
            end
        end
    end
end)

-- Slider Logic
local dragging = false
local function setSpeedFromSlider()
    local pct = math.clamp(sliderKnob.Position.X.Scale, 0, 1)
    currentMultiplier = 1 + (maxSpeedMultiplier - 1) * pct
    speedLabel.Text = ("WalkSpeed: %.1fx"):format(currentMultiplier)
end

sliderKnob.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then 
        dragging = true 
        sliderKnob.BackgroundColor3 = Color3.new(1, 0.5, 0.5)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then 
        dragging = false 
        sliderKnob.BackgroundColor3 = Color3.new(1, 0.3, 0.3)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local absX = input.Position.X
        local barX = sliderBar.AbsolutePosition.X
        local barW = sliderBar.AbsoluteSize.X
        local pct = math.clamp((absX - barX) / barW, 0, 1)
        sliderKnob.Position = UDim2.new(pct, -7, -0.25, 0)
        setSpeedFromSlider()
    end
end)

-- Stealth ESP System
local function updateStealthEsp()
    if not espEnabled or panicMode then 
        for _, v in pairs(stealthEsp) do 
            if v then v:Destroy() end
        end
        stealthEsp = {}
        return 
    end
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local char = player.Character
            local head = char:FindFirstChild("Head")
            local hum = char:FindFirstChildOfClass("Humanoid")
            
            if head and hum and hum.Health > 0 then
                if not stealthEsp[player] then
                    local billboard = Instance.new("BillboardGui")
                    billboard.Name = "ZetaESP"
                    billboard.Adornee = head
                    billboard.Size = UDim2.new(0, 180, 0, 45)
                    billboard.StudsOffset = Vector3.new(0, 3.5, 0)
                    billboard.AlwaysOnTop = true
                    billboard.Parent = head
                    
                    local nameLabel = Instance.new("TextLabel")
                    nameLabel.Text = player.Name
                    nameLabel.BackgroundTransparency = 1
                    nameLabel.TextColor3 = player.TeamColor.Color
                    nameLabel.Font = Enum.Font.GothamBold
                    nameLabel.TextSize = 16
                    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
                    nameLabel.Parent = billboard
                    
                    local infoLabel = Instance.new("TextLabel")
                    infoLabel.BackgroundTransparency = 1
                    infoLabel.TextColor3 = Color3.new(1, 1, 1)
                    infoLabel.Font = Enum.Font.Gotham
                    infoLabel.TextSize = 14
                    infoLabel.Size = UDim2.new(1, 0, 0.5, 0)
                    infoLabel.Position = UDim2.new(0, 0, 0.5, 0)
                    infoLabel.Parent = billboard
                    
                    stealthEsp[player] = billboard
                end
                
                stealthEsp[player].Enabled = true
                local info = stealthEsp[player]:FindFirstChildOfClass("TextLabel", 1)
                if info then
                    local dist = (char.HumanoidRootPart.Position - getChar().HumanoidRootPart.Position).Magnitude
                    info.Text = string.format("HP: %d/%d | Dist: %d", 
                        hum.Health, hum.MaxHealth, math.floor(dist))
                end
            elseif stealthEsp[player] then
                stealthEsp[player]:Destroy()
                stealthEsp[player] = nil
            end
        end
    end
end

-- Ghost Hitboxes
local function expandHitboxes()
    if not hitboxEnabled or panicMode then return end
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            for _, part in ipairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    if not originalSizes[part] then 
                        originalSizes[part] = part.Size
                    end
                    part.Size = originalSizes[part] * hitboxScale
                    part.Transparency = 0.7
                    part.CanCollide = false
                end
            end
        end
    end
end

-- Triple-Write Speed Hack
local function setSpeed()
    if panicMode then return end
    
    local char = getChar()
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if hum then
        local targetSpeed = normalSpeed * currentMultiplier
        for i = 1, 3 do
            task.spawn(function()
                hum.WalkSpeed = targetSpeed
            end)
            task.wait(0.01)
        end
    end
end

-- NoClip Implementation
local function noclipUpdate()
    if not noclipEnabled or panicMode then return end
    
    local char = getChar()
    if char then
        for _, p in pairs(char:GetDescendants()) do
            if p:IsA("BasePart") then p.CanCollide = false end
        end
        if floatPart then
            floatPart.Position = char.HumanoidRootPart.Position - Vector3.new(0, 3.5, 0)
        end
    end
end

-- Auto-Respawn Bypass
localPlayer.CharacterAdded:Connect(function(char)
    task.wait(0.5)
    if noclipEnabled and not floatPart then
        floatPart = Instance.new("Part")
        floatPart.Size = Vector3.new(6, 1, 6)
        floatPart.Anchored = true
        floatPart.Transparency = 1
        floatPart.CanCollide = true
        floatPart.Parent = workspace
    end
end)

-- Panic System (Right Shift)
UserInputService.InputBegan:Connect(function(input, gpe)
    if input.KeyCode == Enum.KeyCode.RightShift and not gpe then
        panicMode = not panicMode
        
        if panicMode then
            -- Disable all features
            espEnabled = false
            noclipEnabled = false
            hitboxEnabled = false
            currentMultiplier = 1
            
            -- Restore game state
            for part, size in pairs(originalSizes) do
                if part.Parent then part.Size = size end
            end
            for _, v in pairs(stealthEsp) do v:Destroy() end
            stealthEsp = {}
            
            -- Update GUI
            espToggle.Text = "ESP: OFF"
            espToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            noclipToggle.Text = "NoClip: OFF"
            noclipToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            hitboxToggle.Text = "Hitbox: OFF"
            hitboxToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            speedLabel.Text = "WalkSpeed: 1.0x"
            sliderKnob.Position = UDim2.new(0, -7, -0.25, 0)
            
            -- Visual alert
            local warn = Instance.new("TextLabel", gui)
            warn.Text = "PANIC MODE ACTIVATED"
            warn.Font = Enum.Font.GothamBlack
            warn.TextSize = 24
            warn.TextColor3 = Color3.new(1, 0, 0)
            warn.BackgroundTransparency = 1
            warn.Size = UDim2.new(1, 0, 0, 30)
            warn.Position = UDim2.new(0, 0, 0.1, 0)
            warn.ZIndex = 10
            
            task.delay(2, function() warn:Destroy() end)
        end
    end
    
    -- Toggle GUI (Right Ctrl)
    if input.KeyCode == Enum.KeyCode.RightControl and not gpe then
        gui.Enabled = not gui.Enabled
    end
end)

-- Swift Memory Optimized Main Loop
local heartbeat = RunService.Heartbeat
heartbeat:Connect(function()
    if panicMode then return end
    setSpeed()
    noclipUpdate()
    expandHitboxes()
    updateStealthEsp()
end)

-- Cleanup on teleport
localPlayer.OnTeleport:Connect(function()
    for _, obj in pairs(stealthEsp) do obj:Destroy() end
    if floatPart then floatPart:Destroy() end
end)

-- Initialize
if offlineMode then
    statusLabel.Text = "OFFLINE MODE | Hitbox Scale: 2x"
end
