-- Type Soul GUI: Clean Tabbed Interface for ESP, WalkSpeed with run speed preserved, NoClip (Auto Parry removed)
local Players            = game:GetService("Players")
local RunService         = game:GetService("RunService")
local UserInputService   = game:GetService("UserInputService")

local localPlayer        = Players.LocalPlayer
local camera             = workspace.CurrentCamera
local drawingObjects     = {}

local normalWalkSpeed    = 16 -- normal walking speed in Type Soul
local normalRunSpeed     = 24 -- normal running speed, adjust if needed
local maxSpeedMultiplier = 5
local currentMultiplier  = 1
local floatPart          = nil

local espEnabled         = true
local noclipEnabled      = false

local function getChar()
    return localPlayer.Character or localPlayer.CharacterAdded:Wait()
end

-- Create main GUI
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "TypeSoulHub"
gui.ResetOnSpawn = false
gui.Enabled = true

-- Main window frame
local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 320, 0, 360)
mainFrame.Position = UDim2.new(0, 100, 0, 100)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

-- Title bar
local titleBar = Instance.new("Frame", mainFrame)
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
titleBar.BorderSizePixel = 0

local titleLabel = Instance.new("TextLabel", titleBar)
titleLabel.Size = UDim2.new(1, -40, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Type Soul Hub"
titleLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 18

local closeButton = Instance.new("TextButton", titleBar)
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -30, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(50, 0, 0)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 18
closeButton.BorderSizePixel = 0
closeButton.MouseButton1Click:Connect(function()
    gui.Enabled = false
end)

-- Tabs container
local tabsFrame = Instance.new("Frame", mainFrame)
tabsFrame.Size = UDim2.new(1, 0, 0, 30)
tabsFrame.Position = UDim2.new(0, 0, 0, 30)
tabsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
tabsFrame.BorderSizePixel = 0

local pages = {}

local function createTab(name, positionX)
    local tabBtn = Instance.new("TextButton", tabsFrame)
    tabBtn.Size = UDim2.new(0, 100, 1, 0)
    tabBtn.Position = UDim2.new(0, positionX, 0, 0)
    tabBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tabBtn.BorderSizePixel = 0
    tabBtn.Text = name
    tabBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
    tabBtn.Font = Enum.Font.GothamBold
    tabBtn.TextSize = 14

    local page = Instance.new("Frame", mainFrame)
    page.Size = UDim2.new(1, 0, 1, -60)
    page.Position = UDim2.new(0, 0, 0, 60)
    page.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    page.BorderSizePixel = 0
    page.Visible = false

    pages[name] = {button = tabBtn, page = page}

    tabBtn.MouseButton1Click:Connect(function()
        for _, v in pairs(pages) do
            v.page.Visible = false
            v.button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        end
        page.Visible = true
        tabBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    end)

    return page
end

-- Create tabs
local espPage = createTab("ESP", 0)
local miscPage = createTab("Misc", 100)

-- Activate first tab by default
pages["ESP"].page.Visible = true
pages["ESP"].button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

-- ========== ESP PAGE ==========

-- ESP Toggle
local espToggle = Instance.new("TextButton", espPage)
espToggle.Size = UDim2.new(0, 120, 0, 40)
espToggle.Position = UDim2.new(0, 20, 0, 20)
espToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
espToggle.TextColor3 = Color3.fromRGB(220, 220, 220)
espToggle.BorderSizePixel = 0
espToggle.Font = Enum.Font.GothamBold
espToggle.TextSize = 16
espToggle.Text = "ESP: ON"

espToggle.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espToggle.Text = espEnabled and "ESP: ON" or "ESP: OFF"
    for _, obj in pairs(drawingObjects) do
        for _, draw in pairs(obj) do
            draw.Visible = false
        end
    end
end)

-- ========== MISC PAGE ==========

-- NoClip Toggle
local noclipToggle = Instance.new("TextButton", miscPage)
noclipToggle.Size = UDim2.new(0, 120, 0, 40)
noclipToggle.Position = UDim2.new(0, 20, 0, 20)
noclipToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
noclipToggle.TextColor3 = Color3.fromRGB(220, 220, 220)
noclipToggle.BorderSizePixel = 0
noclipToggle.Font = Enum.Font.GothamBold
noclipToggle.TextSize = 16
noclipToggle.Text = "NoClip: OFF"

noclipToggle.MouseButton1Click:Connect(function()
    noclipEnabled = not noclipEnabled
    noclipToggle.Text = noclipEnabled and "NoClip: ON" or "NoClip: OFF"

    if noclipEnabled then
        if not floatPart then
            floatPart = Instance.new("Part")
            floatPart.Size = Vector3.new(6, 1, 6)
            floatPart.Anchored = true
            floatPart.Transparency = 1
            floatPart.CanCollide = true
            floatPart.Parent = workspace
        end
    else
        if floatPart then
            floatPart:Destroy()
            floatPart = nil
        end
    end
end)

-- WalkSpeed Label
local speedLabel = Instance.new("TextLabel", miscPage)
speedLabel.Size = UDim2.new(1, -40, 0, 25)
speedLabel.Position = UDim2.new(0, 20, 0, 80)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 16
speedLabel.Text = "WalkSpeed: 1.0x"

-- WalkSpeed Slider Bar
local sliderBar = Instance.new("Frame", miscPage)
sliderBar.Size = UDim2.new(1, -40, 0, 12)
sliderBar.Position = UDim2.new(0, 20, 0, 110)
sliderBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
sliderBar.BorderSizePixel = 0

local sliderKnob = Instance.new("Frame", sliderBar)
sliderKnob.Size = UDim2.new(0, 14, 1, 0)
sliderKnob.Position = UDim2.new(0, 0, 0, 0)
sliderKnob.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
sliderKnob.BorderSizePixel = 0
sliderKnob.AnchorPoint = Vector2.new(0.5, 0.5)
sliderKnob.Position = UDim2.new(0, 0, 0.5, 0)
sliderKnob.ZIndex = 2

local dragging = false

local function setSpeedFromSlider()
    local pct = math.clamp((sliderKnob.Position.X.Offset + 7) / sliderBar.AbsoluteSize.X, 0, 1)
    currentMultiplier = 1 + (maxSpeedMultiplier - 1) * pct
    speedLabel.Text = ("WalkSpeed: %.1fx"):format(currentMultiplier)
end

sliderKnob.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
    end
end)
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mouseX = input.Position.X
        local barX = sliderBar.AbsolutePosition.X
        local barW = sliderBar.AbsoluteSize.X
        local relativeX = math.clamp(mouseX - barX, 0, barW)
        sliderKnob.Position = UDim2.new(0, relativeX, 0.5, 0)
        setSpeedFromSlider()
    end
end)

-- Keybind: Toggle GUI (Right Ctrl)
UserInputService.InputBegan:Connect(function(input, gpe)
    if input.KeyCode == Enum.KeyCode.RightControl and not gpe then
        gui.Enabled = not gui.Enabled
    end
end)

-- Persistent WalkSpeed + NoClip enforcement with running speed preserved
RunService.Stepped:Connect(function()
    local char = getChar()
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if hum then
        -- Preserve run speed, only modify walk speed
        if hum.WalkSpeed >= normalRunSpeed - 0.1 then
            hum.WalkSpeed = normalRunSpeed
        else
            hum.WalkSpeed = normalWalkSpeed * currentMultiplier
        end

        if noclipEnabled then
            for _, p in pairs(char:GetDescendants()) do
                if p:IsA("BasePart") then p.CanCollide = false end
            end
            if floatPart then
                floatPart.Position = char.HumanoidRootPart.Position - Vector3.new(0, 3.5, 0)
            end
        end
    end
end)

-- ESP drawing functions
local function createEsp(player)
    if player == localPlayer or drawingObjects[player] then return end
    local name = Drawing.new("Text")
    local hp   = Drawing.new("Text")
    local dist = Drawing.new("Text")

    name.Size, name.Outline, name.Center, name.Visible = 14, true, true, false
    hp.Size,   hp.Outline,   hp.Center,   hp.Visible   = 13, true, true, false
    dist.Size, dist.Outline, dist.Center, dist.Visible = 13, true, true, false
    hp.Color = Color3.new(1, 0, 0)

    drawingObjects[player] = {name = name, health = hp, dist = dist}
end

Players.PlayerRemoving:Connect(function(player)
    local d = drawingObjects[player]
    if d then for _, obj in pairs(d) do obj:Remove() end end
    drawingObjects[player] = nil
end)

RunService.RenderStepped:Connect(function()
    if not espEnabled then return end
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            local hum = player.Character:FindFirstChildOfClass("Humanoid")
            if hrp and hum and hum.Health > 0 then
                createEsp(player)
                local s, visible = camera:WorldToViewportPoint(hrp.Position)
                local d = drawingObjects[player]
                if visible then
                    d.name.Visible = true
                    d.health.Visible = true
                    d.dist.Visible = true
                    d.name.Position = Vector2.new(s.X, s.Y - 40)
                    d.health.Position = Vector2.new(s.X, s.Y - 26)
                    d.dist.Position = Vector2.new(s.X, s.Y - 14)

                    -- Color by team
                    local teamColor = player.TeamColor.Color or Color3.new(1,1,1)
                    d.name.Color = teamColor
                    d.name.Text = player.Name
                    d.health.Text = ("HP: %d"):format(math.floor(hum.Health))
                    d.dist.Text = ("%.1fm"):format((hrp.Position - camera.CFrame.Position).Magnitude)
                else
                    d.name.Visible = false
                    d.health.Visible = false
                    d.dist.Visible = false
                end
            else
                if drawingObjects[player] then
                    for _, obj in pairs(drawingObjects[player]) do obj.Visible = false end
                end
            end
        end
    end
end)
