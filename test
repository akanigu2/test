--[[
====================================================================================================
    Type Soul - Auto LavaGuy Killer (Noclip & Target Lock Edition)
====================================================================================================

    DISCLAIMER:
    No automation script is 100% safe. This script has been modified to behave more like a
    human player to REDUCE the risk of detection, but the risk is never zero. Use at your own
    discretion.

    New Features:
    -   Target Lock: The script will now lock onto and finish one "LavaGuy" before searching
        for another.
    -   Noclip: Your character can now fly through walls and all other objects, preventing you
        from getting stuck.

    "Humanizer" Features:
    -   Line-of-Sight Check: Only attacks if there is a clear view of the target.
    -   Randomized Attack Delay: Attacks at slightly variable speeds.
    -   Movement Jitter: Follows the target with slight imperfections.
    -   Smoother Movement: Turns and follows less aggressively.

====================================================================================================
]]

--// SERVICES //--
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

--// CONFIGURATION //--
local NPC_NAME = "LavaGuy"           -- The exact name of the NPC model
local REMOTE_NAME = "CombatEvent"    -- !! PLACEHOLDER: Find the actual combat remote event name !!

--// HUMANIZER SETTINGS //--
local MIN_ATTACK_DELAY = 0.6
local MAX_ATTACK_DELAY = 0.9
local POSITION_JITTER = 1.5
local DISTANCE_BEHIND = 9
local FLOAT_HEIGHT = 2
local FOLLOW_RESPONSIVENESS = 15
local ATTACK_RANGE = 15

--// LOCAL PLAYER VARIABLES //--
local LocalPlayer = Players.LocalPlayer
local Character
local Humanoid
local HumanoidRootPart
local PlayerHead

--// SCRIPT STATE //--
local isRunning = true
local targetNpc = nil
local lastAttackTime = 0

-- Physics objects for flight
local rootAttachment, targetAttachment
local alignPosition, alignOrientation

--// FUNCTIONS //--

-- Function to enable Noclip for the character
local function enableNoclip()
    if not Character then return end
    print("Noclip enabled.")
    for _, part in ipairs(Character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
end

-- Function to get character components and apply noclip on spawn
local function onCharacterAdded(char)
    Character = char
    Humanoid = Character:WaitForChild("Humanoid", 10)
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart", 10)
    PlayerHead = Character:WaitForChild("Head", 10)
    
    if Humanoid then
        -- Re-apply noclip every time the character respawns
        enableNoclip()
        Humanoid.Died:Connect(function()
            print("Player died. Cleaning up flight systems.")
            if alignPosition then alignPosition.Enabled = false end
            if alignOrientation then alignOrientation.Enabled = false end
        end)
    end
end

-- Function to find the target NPC
local function findTarget()
    local closestTarget = nil
    local minDistance = math.huge
    
    if not HumanoidRootPart then return nil end

    for _, entity in ipairs(Workspace:GetChildren()) do
        if entity:IsA("Model") and entity.Name == NPC_NAME then
            local npcHumanoid = entity:FindFirstChildOfClass("Humanoid")
            local npcRootPart = entity:FindFirstChild("HumanoidRootPart")
            if npcHumanoid and npcHumanoid.Health > 0 and npcRootPart then
                local distance = (HumanoidRootPart.Position - npcRootPart.Position).Magnitude
                if distance < minDistance then
                    minDistance = distance
                    closestTarget = entity
                end
            end
        end
    end

    if closestTarget then
        print("Found new target: " .. closestTarget.Name)
    end
    return closestTarget
end

-- Function to check for a clear line of sight
local function hasLineOfSight(target)
    if not PlayerHead or not target:FindFirstChild("HumanoidRootPart") then return false end
    local origin = PlayerHead.Position
    local targetPosition = target.HumanoidRootPart.Position
    local direction = (targetPosition - origin).Unit * (ATTACK_RANGE + 5)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {Character, target}
    local result = Workspace:Raycast(origin, direction, raycastParams)
    return not result
end

-- Function to set up flight mechanics
local function enableFlight(targetRoot)
    if not Character or not HumanoidRootPart then return end
    Humanoid.PlatformStand = true
    if not rootAttachment then rootAttachment = Instance.new("Attachment", HumanoidRootPart) end
    if targetAttachment then targetAttachment:Destroy() end
    targetAttachment = Instance.new("Attachment", targetRoot)
    if not alignPosition then
        alignPosition = Instance.new("AlignPosition", HumanoidRootPart)
        alignPosition.Attachment0 = rootAttachment
        alignPosition.MaxForce = 60000
    end
    alignPosition.Responsiveness = FOLLOW_RESPONSIVENESS
    alignPosition.Attachment1 = targetAttachment
    alignPosition.Enabled = true
    if not alignOrientation then
        alignOrientation = Instance.new("AlignOrientation", HumanoidRootPart)
        alignOrientation.Attachment0 = rootAttachment
        alignOrientation.MaxTorque = 60000
    end
    alignOrientation.Responsiveness = FOLLOW_RESPONSIVENESS
    alignOrientation.Attachment1 = targetAttachment
    alignOrientation.Enabled = true
    print("Flight systems enabled for target.")
end

-- Function to clean up flight mechanics
local function disableFlight()
    if Humanoid and Humanoid.Health > 0 then Humanoid.PlatformStand = false end
    if alignPosition then alignPosition.Enabled = false end
    if alignOrientation then alignOrientation.Enabled = false end
    if targetAttachment then targetAttachment:Destroy() end
end

-- Function to handle the attack logic
local function attackTarget(target)
    local combatRemote = ReplicatedStorage:FindFirstChild(REMOTE_NAME, true)
    if not combatRemote then return end
    local now = tick()
    local randomDelay = math.random(MIN_ATTACK_DELAY * 100, MAX_ATTACK_DELAY * 100) / 100
    if (now - lastAttackTime) > randomDelay then
        combatRemote:FireServer(target, "M1")
        lastAttackTime = now
    end
end

--// SCRIPT INITIALIZATION //--
if LocalPlayer.Character then
    onCharacterAdded(LocalPlayer.Character)
end
LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

print("Safer Auto LavaGuy Killer (Noclip & Target Lock): Initialized.")

--// MAIN LOOP (RUNS EVERY FRAME) //--
RunService.Heartbeat:Connect(function()
    if not isRunning or not Character or not Humanoid or Humanoid.Health <= 0 then
        return
    end

    -- TARGET LOCK LOGIC: Only find a new target if the current one is gone or dead.
    if not targetNpc or not targetNpc.Parent or not targetNpc:FindFirstChild("Humanoid") or targetNpc.Humanoid.Health <= 0 then
        disableFlight()
        targetNpc = findTarget()
        if not targetNpc then return end -- If no new target found, wait.
    end

    local targetRootPart = targetNpc and targetNpc:FindFirstChild("HumanoidRootPart")
    if not targetRootPart then targetNpc = nil; return end
    
    if not alignPosition or not alignPosition.Enabled then enableFlight(targetRootPart) end
    
    local jitterX = (math.random() - 0.5) * POSITION_JITTER
    local jitterZ = (math.random() - 0.5) * POSITION_JITTER
    local offsetCFrame = CFrame.new(jitterX, FLOAT_HEIGHT, DISTANCE_BEHIND + jitterZ)
    if targetAttachment and targetAttachment.Parent then
        targetAttachment.CFrame = offsetCFrame
    end

    local distance = (HumanoidRootPart.Position - targetRootPart.Position).Magnitude
    if distance <= ATTACK_RANGE and hasLineOfSight(targetNpc) then
        attackTarget(targetNpc)
    end
end)
