-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- Settings
local espEnabled = true
local drawingObjects = {}
local guiVisible = true
local maxSpeedMultiplier = 5
local defaultWalkSpeed = 16

-- Create GUI
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "AkaniguESP"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 220, 0, 130)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.BackgroundTransparency = 0.4
frame.BorderSizePixel = 0

-- Animation: Fade in
frame.BackgroundTransparency = 1
for i = 1, 10 do
    frame.BackgroundTransparency = 1 - (i * 0.06)
    task.wait(0.01)
end

-- ESP Toggle
local toggle = Instance.new("TextButton", frame)
toggle.Size = UDim2.new(0, 100, 0, 30)
toggle.Position = UDim2.new(0, 10, 0, 10)
toggle.Text = "ESP: ON"
toggle.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
toggle.TextColor3 = Color3.new(1, 1, 1)
toggle.BorderSizePixel = 0

toggle.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    toggle.Text = espEnabled and "ESP: ON" or "ESP: OFF"
    for _, obj in pairs(drawingObjects) do
        for _, draw in pairs(obj) do
            draw.Visible = espEnabled and guiVisible
        end
    end
end)

-- WalkSpeed UI
local speedLabel = Instance.new("TextLabel", frame)
speedLabel.Size = UDim2.new(1, -20, 0, 20)
speedLabel.Position = UDim2.new(0, 10, 0, 45)
speedLabel.Text = "WalkSpeed: 1.0x"
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.new(1, 1, 1)
speedLabel.TextXAlignment = Enum.TextXAlignment.Left

local sliderBar = Instance.new("Frame", frame)
sliderBar.Size = UDim2.new(1, -20, 0, 8)
sliderBar.Position = UDim2.new(0, 10, 0, 70)
sliderBar.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
sliderBar.BorderSizePixel = 0

local sliderKnob = Instance.new("Frame", sliderBar)
sliderKnob.Size = UDim2.new(0, 10, 1, 0)
sliderKnob.Position = UDim2.new(0, 0, 0, 0)
sliderKnob.BackgroundColor3 = Color3.new(1, 1, 1)
sliderKnob.BorderSizePixel = 0

-- Credits
local credits = Instance.new("TextLabel", frame)
credits.Size = UDim2.new(1, -20, 0, 20)
credits.Position = UDim2.new(0, 10, 1, -25)
credits.BackgroundTransparency = 1
credits.TextColor3 = Color3.new(1, 1, 1)
credits.TextXAlignment = Enum.TextXAlignment.Left
credits.Text = "Made by Akanigu"

-- Slider logic
local dragging = false

local function updateSpeed()
    local percent = math.clamp(sliderKnob.Position.X.Scale, 0, 1)
    local multiplier = 1 + (maxSpeedMultiplier - 1) * percent
    speedLabel.Text = "WalkSpeed: " .. string.format("%.1fx", multiplier)

    local char = localPlayer.Character
    if char and char:FindFirstChildOfClass("Humanoid") then
        char:FindFirstChildOfClass("Humanoid").WalkSpeed = defaultWalkSpeed * multiplier
    end
end

sliderKnob.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local abs = input.Position.X
        local barPos = sliderBar.AbsolutePosition.X
        local barSize = sliderBar.AbsoluteSize.X
        local percent = math.clamp((abs - barPos) / barSize, 0, 1)
        sliderKnob.Position = UDim2.new(percent, -5, 0, 0)
        updateSpeed()
    end
end)

-- Right CTRL to toggle GUI
UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.RightControl then
        guiVisible = not guiVisible
        gui.Enabled = guiVisible
        if not guiVisible then
            for _, obj in pairs(drawingObjects) do
                for _, draw in pairs(obj) do
                    draw.Visible = false
                end
            end
        end
    end
end)

-- ESP Drawing
local function createEsp(player)
    if player == localPlayer then return end
    if drawingObjects[player] then return end

    local nameDraw = Drawing.new("Text")
    nameDraw.Size = 14
    nameDraw.Color = player.TeamColor.Color
    nameDraw.Outline = true
    nameDraw.Center = true
    nameDraw.Visible = false

    local healthDraw = Drawing.new("Text")
    healthDraw.Size = 13
    healthDraw.Color = Color3.new(1, 0, 0)
    healthDraw.Outline = true
    healthDraw.Center = true
    healthDraw.Visible = false

    local distDraw = Drawing.new("Text")
    distDraw.Size = 13
    distDraw.Color = Color3.new(1, 1, 1)
    distDraw.Outline = true
    distDraw.Center = true
    distDraw.Visible = false

    drawingObjects[player] = {name = nameDraw, health = healthDraw, dist = distDraw}
end

-- Cleanup
Players.PlayerRemoving:Connect(function(player)
    local objs = drawingObjects[player]
    if objs then
        for _, obj in pairs(objs) do
            obj:Remove()
        end
        drawingObjects[player] = nil
    end
end)

-- ESP Update Loop
RunService.RenderStepped:Connect(function()
    if not espEnabled or not guiVisible then return end

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local hrp = player.Character.HumanoidRootPart
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            local pos, onScreen = camera:WorldToViewportPoint(hrp.Position + Vector3.new(0, 3, 0))

            createEsp(player)
            local objs = drawingObjects[player]

            if onScreen and humanoid and humanoid.Health > 0 then
                objs.name.Position = Vector2.new(pos.X, pos.Y)
                objs.name.Text = player.Name .. " [" .. tostring(player.Team) .. "]"
                objs.name.Color = player.TeamColor.Color
                objs.name.Visible = true

                objs.health.Position = Vector2.new(pos.X, pos.Y + 15)
                objs.health.Text = "HP: " .. math.floor(humanoid.Health) .. "/" .. math.floor(humanoid.MaxHealth)
                objs.health.Visible = true

                local dist = (localPlayer.Character.HumanoidRootPart.Position - hrp.Position).Magnitude
                objs.dist.Position = Vector2.new(pos.X, pos.Y + 30)
                objs.dist.Text = "Dist: " .. math.floor(dist)
                objs.dist.Visible = true
            else
                objs.name.Visible = false
                objs.health.Visible = false
                objs.dist.Visible = false
            end
        end
    end
end)
