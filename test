-- Type Soul Utility Hub: ESP + WalkSpeed + NoClip + Infinite Jump + GUI Toggle (Clean UI)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera

local drawingObjects = {}
local espEnabled = true
local noclipEnabled = false
local infJumpEnabled = false
local guiVisible = true
local normalSpeed = 16
local maxSpeedMultiplier = 5
local currentMultiplier = 1
local floatPart = nil
local jumpConnection = nil

local function getChar()
    return localPlayer.Character or localPlayer.CharacterAdded:Wait()
end

-- GUI Setup
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.ResetOnSpawn = false

-- Main Frame
local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 250, 0, 200)
mainFrame.Position = UDim2.new(0, 20, 0, 20)
mainFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

-- UIListLayout for clean layout
local layout = Instance.new("UIListLayout", mainFrame)
layout.Padding = UDim.new(0, 6)
layout.FillDirection = Enum.FillDirection.Vertical
layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
layout.VerticalAlignment = Enum.VerticalAlignment.Top

-- Padding
local padding = Instance.new("UIPadding", mainFrame)
padding.PaddingTop = UDim.new(0, 10)
padding.PaddingLeft = UDim.new(0, 10)
padding.PaddingRight = UDim.new(0, 10)

-- Button Template
local function createButton(text, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0, 30)
    button.Text = text
    button.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.BorderSizePixel = 0
    button.MouseButton1Click:Connect(callback)
    return button
end

-- ESP Toggle Button
local espButton = createButton("ESP: ON", function()
    espEnabled = not espEnabled
    espButton.Text = espEnabled and "ESP: ON" or "ESP: OFF"
    for _, obj in pairs(drawingObjects) do
        for _, draw in pairs(obj) do
            draw.Visible = false
        end
    end
end)
espButton.Parent = mainFrame

-- NoClip Toggle Button
local noclipButton = createButton("NoClip: OFF", function()
    noclipEnabled = not noclipEnabled
    noclipButton.Text = noclipEnabled and "NoClip: ON" or "NoClip: OFF"
    if noclipEnabled then
        if not floatPart then
            floatPart = Instance.new("Part")
            floatPart.Size = Vector3.new(6, 1, 6)
            floatPart.Anchored = true
            floatPart.Transparency = 1
            floatPart.CanCollide = true
            floatPart.Parent = workspace
        end
    else
        if floatPart then
            floatPart:Destroy()
            floatPart = nil
        end
    end
end)
noclipButton.Parent = mainFrame

-- Infinite Jump Toggle
local infJumpButton = createButton("Inf Jump: OFF", function()
    infJumpEnabled = not infJumpEnabled
    infJumpButton.Text = infJumpEnabled and "Inf Jump: ON" or "Inf Jump: OFF"
end)
infJumpButton.Parent = mainFrame
